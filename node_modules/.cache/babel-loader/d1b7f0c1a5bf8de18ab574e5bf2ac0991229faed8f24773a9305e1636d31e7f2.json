{"ast":null,"code":"import { getClassroomId } from \"../../../api_handler/classroom_api_handler\";\nimport { getUserId } from \"../../../cookie_handler/user_cookie_handler\";\nconst iceServers = {\n  'iceServers': [\n  // {'url': 'stun:stun.l.google.com:19302'},\n  {\n    \"url\": \"turn:relay1.expressturn.com:3478\",\n    \"username\": \"efC2OT8W129D2ID63H\",\n    \"credential\": \"6ZeChztFE4cxEmgg\"\n  }]\n};\nconst videoConstraints = {\n  audio: false,\n  video: true\n};\nlet pc = null;\nexport async function onRTCOffer(setRemoteStream, setLocalStream, message, classroomWs) {\n  pc = new RTCPeerConnection(iceServers);\n\n  // pc.ontrack = (event) => {\n  //     setRemoteStream(event.streams[0])\n  // };\n\n  // pc.onicecandidate = async (candidate) => {\n  //     classroomWs.send(\n  //         JSON.stringify({\n  //             \"cmd\": \"candidate\",\n  //             \"senderId\": getUserId(),\n  //             \"applicationType\": \"app\",\n  //             \"recieverId\": message.senderId,\n  //             \"classroomId\": await getClassroomId(),\n  //             \"message\": {\n  //               'sdpMLineIndex': candidate.sdpMLineIndex,\n  //               'sdpMid': candidate.sdpMid,\n  //               'candidate': candidate.candidate,\n  //             }\n  //         })\n  //     )\n  // };\n\n  try {\n    // Get local stream, show it in self-view, and add it to be sent.\n    const stream = await navigator.mediaDevices.getUserMedia(videoConstraints);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    console.log(stream);\n    setLocalStream(stream);\n  } catch (err) {\n    console.error(err);\n  }\n\n  // await pc.setRemoteDescription(new RTCSessionDescription(message.message));\n\n  // await pc.setLocalDescription(await pc.createAnswer());\n\n  classroomWs.send(JSON.stringify({\n    \"cmd\": \"answer\",\n    \"senderId\": getUserId(),\n    \"applicationType\": \"app\",\n    \"recieverId\": message.senderId,\n    \"classroomId\": await getClassroomId(),\n    \"message\": {\n      'sdp': pc.localDescription.sdp,\n      'type': pc.localDescription.type\n    }\n  }));\n}\nexport async function onICECandidate(message) {\n  if (pc !== null) {\n    pc.addIceCandidate(new RTCIceCandidate(message.message));\n  }\n}\nexport async function startLocalStream(setLocalStream) {\n  navigator.mediaDevices.getUserMedia({\n    audio: false,\n    video: true\n  }).then(stream => {\n    const bigVideoSelect = document.querySelector('#bigVideo');\n    const miniVideoSelect = document.querySelector('#miniVideo');\n    if (props.openSelfClassroom) {\n      bigVideoSelect.srcObject = stream;\n      bigVideoStream = stream;\n      miniVideoSelect.srcObject = stream;\n      miniVideoStream = stream;\n    }\n  });\n}","map":{"version":3,"names":["getClassroomId","getUserId","iceServers","videoConstraints","audio","video","pc","onRTCOffer","setRemoteStream","setLocalStream","message","classroomWs","RTCPeerConnection","stream","navigator","mediaDevices","getUserMedia","getTracks","forEach","track","addTrack","console","log","err","error","send","JSON","stringify","senderId","localDescription","sdp","type","onICECandidate","addIceCandidate","RTCIceCandidate","startLocalStream","then","bigVideoSelect","document","querySelector","miniVideoSelect","props","openSelfClassroom","srcObject","bigVideoStream","miniVideoStream"],"sources":["/Users/hongyixun/Desktop/tmentor/tmentor_web/src/pages/classroom/service/webRTC_service.js"],"sourcesContent":["import { getClassroomId } from \"../../../api_handler/classroom_api_handler\";\nimport { getUserId } from \"../../../cookie_handler/user_cookie_handler\";\n\nconst iceServers = {\n    'iceServers': [\n        // {'url': 'stun:stun.l.google.com:19302'},\n        {\n        \"url\": \"turn:relay1.expressturn.com:3478\",\n        \"username\": \"efC2OT8W129D2ID63H\",\n        \"credential\": \"6ZeChztFE4cxEmgg\",\n        },\n    ]\n};\nconst videoConstraints = {\n    audio: false, \n    video: true\n}\n\nlet pc = null\n\n\nexport async function onRTCOffer(setRemoteStream, setLocalStream, message, classroomWs) {\n    pc = new RTCPeerConnection(iceServers);\n\n    // pc.ontrack = (event) => {\n    //     setRemoteStream(event.streams[0])\n    // };\n\n    // pc.onicecandidate = async (candidate) => {\n    //     classroomWs.send(\n    //         JSON.stringify({\n    //             \"cmd\": \"candidate\",\n    //             \"senderId\": getUserId(),\n    //             \"applicationType\": \"app\",\n    //             \"recieverId\": message.senderId,\n    //             \"classroomId\": await getClassroomId(),\n    //             \"message\": {\n    //               'sdpMLineIndex': candidate.sdpMLineIndex,\n    //               'sdpMid': candidate.sdpMid,\n    //               'candidate': candidate.candidate,\n    //             }\n    //         })\n    //     )\n    // };\n\n    try {\n        // Get local stream, show it in self-view, and add it to be sent.\n        const stream = await navigator.mediaDevices.getUserMedia(videoConstraints);\n        stream.getTracks().forEach( (track) =>\n          pc.addTrack(track, stream)\n        )\n        console.log(stream)\n        setLocalStream(stream)\n    } catch (err) {\n        console.error(err);\n    }\n\n    // await pc.setRemoteDescription(new RTCSessionDescription(message.message));\n\n    // await pc.setLocalDescription(await pc.createAnswer());\n\n    classroomWs.send(\n        JSON.stringify({\n            \"cmd\": \"answer\",\n            \"senderId\": getUserId(),\n            \"applicationType\": \"app\",\n            \"recieverId\": message.senderId,\n            \"classroomId\": await getClassroomId(),\n            \"message\": {\n              'sdp': pc.localDescription.sdp,\n              'type': pc.localDescription.type,\n            }\n        })\n    )\n}\n\nexport async function onICECandidate(message) {\n    if(pc !== null) {\n        pc.addIceCandidate(new RTCIceCandidate(message.message));\n    }\n}\n\nexport async function startLocalStream(setLocalStream) {\n    navigator.mediaDevices.getUserMedia({audio: false, video: true})\n    .then((stream) => {\n        const bigVideoSelect = document.querySelector('#bigVideo')\n        const miniVideoSelect = document.querySelector('#miniVideo')\n        if(props.openSelfClassroom) {\n            bigVideoSelect.srcObject = stream\n            bigVideoStream = stream\n            miniVideoSelect.srcObject = stream\n            miniVideoStream = stream\n        }\n    })\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,6CAA6C;AAEvE,MAAMC,UAAU,GAAG;EACf,YAAY,EAAE;EACV;EACA;IACA,KAAK,EAAE,kCAAkC;IACzC,UAAU,EAAE,oBAAoB;IAChC,YAAY,EAAE;EACd,CAAC;AAET,CAAC;AACD,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACX,CAAC;AAED,IAAIC,EAAE,GAAG,IAAI;AAGb,OAAO,eAAeC,UAAUA,CAACC,eAAe,EAAEC,cAAc,EAAEC,OAAO,EAAEC,WAAW,EAAE;EACpFL,EAAE,GAAG,IAAIM,iBAAiB,CAACV,UAAU,CAAC;;EAEtC;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAI;IACA;IACA,MAAMW,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACb,gBAAgB,CAAC;IAC1EU,MAAM,CAACI,SAAS,EAAE,CAACC,OAAO,CAAGC,KAAK,IAChCb,EAAE,CAACc,QAAQ,CAACD,KAAK,EAAEN,MAAM,CAAC,CAC3B;IACDQ,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACnBJ,cAAc,CAACI,MAAM,CAAC;EAC1B,CAAC,CAAC,OAAOU,GAAG,EAAE;IACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;EACtB;;EAEA;;EAEA;;EAEAZ,WAAW,CAACc,IAAI,CACZC,IAAI,CAACC,SAAS,CAAC;IACX,KAAK,EAAE,QAAQ;IACf,UAAU,EAAE1B,SAAS,EAAE;IACvB,iBAAiB,EAAE,KAAK;IACxB,YAAY,EAAES,OAAO,CAACkB,QAAQ;IAC9B,aAAa,EAAE,MAAM5B,cAAc,EAAE;IACrC,SAAS,EAAE;MACT,KAAK,EAAEM,EAAE,CAACuB,gBAAgB,CAACC,GAAG;MAC9B,MAAM,EAAExB,EAAE,CAACuB,gBAAgB,CAACE;IAC9B;EACJ,CAAC,CAAC,CACL;AACL;AAEA,OAAO,eAAeC,cAAcA,CAACtB,OAAO,EAAE;EAC1C,IAAGJ,EAAE,KAAK,IAAI,EAAE;IACZA,EAAE,CAAC2B,eAAe,CAAC,IAAIC,eAAe,CAACxB,OAAO,CAACA,OAAO,CAAC,CAAC;EAC5D;AACJ;AAEA,OAAO,eAAeyB,gBAAgBA,CAAC1B,cAAc,EAAE;EACnDK,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;IAACZ,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,CAAC,CAC/D+B,IAAI,CAAEvB,MAAM,IAAK;IACd,MAAMwB,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IAC1D,MAAMC,eAAe,GAAGF,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IAC5D,IAAGE,KAAK,CAACC,iBAAiB,EAAE;MACxBL,cAAc,CAACM,SAAS,GAAG9B,MAAM;MACjC+B,cAAc,GAAG/B,MAAM;MACvB2B,eAAe,CAACG,SAAS,GAAG9B,MAAM;MAClCgC,eAAe,GAAGhC,MAAM;IAC5B;EACJ,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}