{"ast":null,"code":"import { getClassroomId } from \"../../../api_handler/classroom_api_handler\";\nimport { getUserId } from \"../../../cookie_handler/user_cookie_handler\";\nimport { successToast } from \"../../../service/toast_service\";\nexport async function openClassroom(classroomWs, classSetting) {\n  classroomWs.send(JSON.stringify({\n    cmd: \"open room\",\n    senderId: getUserId(),\n    applicationType: \"web\",\n    classroomId: await getClassroomId(),\n    message: JSON.stringify(classSetting)\n  }));\n}\nexport async function closeClassroom(classroomWs, setRemoteStream, setLocalStream, setSelf) {\n  classroomWs.send(JSON.stringify({\n    cmd: \"close room\",\n    senderId: getUserId(),\n    applicationType: \"web\",\n    classroomId: await getClassroomId(),\n    message: \"\"\n  }));\n  setSelfClassroomInfo({\n    status: \"offline\"\n  });\n  setRemoteStream({});\n  setLocalStream({});\n}\nexport async function leaveClassroom(classroomWs, teacherClassroomId, setTeacherClassroomInfo, setRemoteStream, setLocalStream, setIsInClassroom) {\n  classroomWs.send(JSON.stringify({\n    cmd: \"leave room\",\n    senderId: getUserId(),\n    applicationType: \"web\",\n    classroomId: teacherClassroomId,\n    message: \"\"\n  }));\n  setTeacherClassroomInfo(null);\n  setRemoteStream({});\n  setLocalStream({});\n  setIsInClassroom(false);\n}\nexport async function onRequireAccess(classroomWs, setOpenModal, setModalContant, message) {\n  const userInfo = JSON.parse(message.message);\n  setModalContant({\n    title: userInfo.userNickname + \"想要加入教室\",\n    body: \"要允許其加入教室嗎？\",\n    confirmFunction: () => {\n      accepetAccess(classroomWs, message.senderId, message.applicationType);\n    },\n    cancelFunction: () => {\n      rejectAccess(classroomWs, message.senderId, message.applicationType);\n    }\n  });\n  setOpenModal(true);\n}\nexport function showEnterConfirmModal(classroomWs, classroomInfo, setModalContant, setOpenModal, setWaitingInfo) {\n  setModalContant({\n    title: \"即將進入\" + classroomInfo.teacherNickname + \"的教室\",\n    body: \"上課時間：\" + classroomInfo.classTime,\n    confirmFunction: () => {\n      accessClassroom(classroomWs, classroomInfo, setWaitingInfo);\n    },\n    cancelFunction: () => {}\n  });\n  setOpenModal(true);\n}\nexport async function onAcceptAccess(classroomWs, waitingInfo, message, setWaitingInfo, setTeacherClassroomInfo, setIsInClassroom) {\n  if (waitingInfo === null || message.classroomId !== waitingInfo.classroomId) {\n    return;\n  }\n  setWaitingInfo(null);\n  setIsInClassroom(true);\n  setTeacherClassroomInfo({\n    classroomId: message.classroomId,\n    teacherId: message.senderId\n  });\n  joinClassroom(classroomWs, message.classroomId, message.senderId, message.message);\n}\nexport async function onJoinRoom(message, teacherClassroomInfo, setSelfClassroomStatus) {\n  const selfClassroomId = await getClassroomId();\n  if (message.classroomId === teacherClassroomInfo.classroomId) {\n    successToast(\"join room success\");\n  }\n  if (message.classroomId === selfClassroomId) {\n    setSelfClassroomStatus(\"in class\");\n  }\n\n  // todo: turn classroom status to in class\n}\n\nexport async function onLeaveRoom(message, selfClassroomInfo, setSelfClassroomInfo) {\n  const selfClassroomId = await getClassroomId();\n  if (message.classroomId === selfClassroomId) {\n    selfClassroomInfo.status = \"online\";\n    setSelfClassroomInfo(selfClassroomInfo);\n  }\n}\nconst joinClassroom = (classroomWs, classroomId, receiverId, classroomToken) => {\n  classroomWs.send(JSON.stringify({\n    \"cmd\": \"join room\",\n    \"senderId\": getUserId(),\n    \"applicationType\": \"web\",\n    \"classroomId\": classroomId,\n    \"recieverId\": receiverId,\n    \"message\": classroomToken\n  }));\n};\nconst accessClassroom = async (classroomWs, classroomInfo, setWaitingInfo) => {\n  setWaitingInfo({\n    teacherNickname: classroomInfo.teacherNickname,\n    classroomId: classroomInfo.classroomId\n  });\n  classroomWs.send(JSON.stringify({\n    \"cmd\": \"ask\",\n    \"senderId\": getUserId(),\n    \"applicationType\": \"web\",\n    \"classroomId\": classroomInfo.classroomId\n  }));\n};\nconst accepetAccess = async (classroomWs, receiverId, receiverApplicationType) => {\n  classroomWs.send(JSON.stringify({\n    cmd: \"accept\",\n    senderId: getUserId(),\n    applicationType: \"web\",\n    recieverId: receiverId,\n    receiverApplicationType: receiverApplicationType,\n    classroomId: await getClassroomId(),\n    message: \"\"\n  }));\n};\nconst rejectAccess = async (classroomWs, receiverId, receiverApplicationType) => {\n  classroomWs.send(JSON.stringify({\n    cmd: \"reject\",\n    senderId: getUserId(),\n    applicationType: \"web\",\n    recieverId: receiverId,\n    receiverApplicationType: receiverApplicationType,\n    classroomId: await getClassroomId(),\n    message: \"\"\n  }));\n};","map":{"version":3,"names":["getClassroomId","getUserId","successToast","openClassroom","classroomWs","classSetting","send","JSON","stringify","cmd","senderId","applicationType","classroomId","message","closeClassroom","setRemoteStream","setLocalStream","setSelf","setSelfClassroomInfo","status","leaveClassroom","teacherClassroomId","setTeacherClassroomInfo","setIsInClassroom","onRequireAccess","setOpenModal","setModalContant","userInfo","parse","title","userNickname","body","confirmFunction","accepetAccess","cancelFunction","rejectAccess","showEnterConfirmModal","classroomInfo","setWaitingInfo","teacherNickname","classTime","accessClassroom","onAcceptAccess","waitingInfo","teacherId","joinClassroom","onJoinRoom","teacherClassroomInfo","setSelfClassroomStatus","selfClassroomId","onLeaveRoom","selfClassroomInfo","receiverId","classroomToken","receiverApplicationType","recieverId"],"sources":["/Users/hongyixun/Desktop/tmentor/tmentor_web/src/pages/classroom/service/classroom_access_service.js"],"sourcesContent":["import { getClassroomId } from \"../../../api_handler/classroom_api_handler\";\nimport { getUserId } from \"../../../cookie_handler/user_cookie_handler\";\nimport { successToast } from \"../../../service/toast_service\";\n\nexport async function openClassroom(classroomWs, classSetting) {\n    classroomWs.send(\n        JSON.stringify({\n            cmd: \"open room\",\n            senderId: getUserId(),\n            applicationType: \"web\",\n            classroomId: await getClassroomId(),\n            message: JSON.stringify(classSetting)\n        })\n    )\n}\n\nexport async function closeClassroom(classroomWs, setRemoteStream, setLocalStream, setSelf) {\n    classroomWs.send(\n        JSON.stringify({\n            cmd: \"close room\",\n            senderId: getUserId(),\n            applicationType: \"web\",\n            classroomId: await getClassroomId(),\n            message: \"\"\n        })\n    )\n\n    setSelfClassroomInfo({status: \"offline\"})\n    setRemoteStream({})\n    setLocalStream({})\n}\n\nexport async function leaveClassroom(classroomWs, teacherClassroomId, setTeacherClassroomInfo, setRemoteStream, setLocalStream, setIsInClassroom) {\n    classroomWs.send(\n        JSON.stringify({\n            cmd: \"leave room\",\n            senderId: getUserId(),\n            applicationType: \"web\",\n            classroomId: teacherClassroomId,\n            message: \"\"\n        })\n    )\n    setTeacherClassroomInfo(null)\n    setRemoteStream({})\n    setLocalStream({})\n    setIsInClassroom(false)\n}\n\nexport async function onRequireAccess(classroomWs, setOpenModal, setModalContant, message) {\n    const userInfo = JSON.parse(message.message)\n\n    setModalContant({\n        title: userInfo.userNickname + \"想要加入教室\",\n        body: \"要允許其加入教室嗎？\",\n        confirmFunction: () => {\n            accepetAccess(classroomWs, message.senderId, message.applicationType)\n        },\n        cancelFunction: () => {\n            rejectAccess(classroomWs, message.senderId, message.applicationType)\n        }\n    })\n    setOpenModal(true)\n}\n\nexport function showEnterConfirmModal(classroomWs, classroomInfo, setModalContant, setOpenModal, setWaitingInfo) {\n    setModalContant({\n        title: \"即將進入\" + classroomInfo.teacherNickname + \"的教室\",\n        body: \"上課時間：\" + classroomInfo.classTime,\n        confirmFunction: () => {\n            accessClassroom(classroomWs, classroomInfo, setWaitingInfo)\n        },\n        cancelFunction: () => {\n\n        }\n    })\n\n    setOpenModal(true)\n}\n\nexport async function onAcceptAccess(classroomWs, waitingInfo, message, setWaitingInfo, setTeacherClassroomInfo, setIsInClassroom) {\n    if(waitingInfo === null || message.classroomId !== waitingInfo.classroomId) {\n        return\n    }\n    \n    setWaitingInfo(null)\n    setIsInClassroom(true)\n    setTeacherClassroomInfo({classroomId: message.classroomId, teacherId: message.senderId})\n    joinClassroom(classroomWs, message.classroomId, message.senderId, message.message)\n}\n\nexport async function onJoinRoom(message, teacherClassroomInfo, setSelfClassroomStatus) {\n    const selfClassroomId = await getClassroomId()\n\n    if(message.classroomId === teacherClassroomInfo.classroomId) {\n        successToast(\"join room success\")\n    }\n\n    if(message.classroomId === selfClassroomId) {\n        setSelfClassroomStatus(\"in class\")\n    }\n\n    // todo: turn classroom status to in class\n}\n\nexport async function onLeaveRoom(message, selfClassroomInfo, setSelfClassroomInfo) {\n    const selfClassroomId = await getClassroomId()\n    \n    if(message.classroomId === selfClassroomId) {\n        selfClassroomInfo.status = \"online\"\n        setSelfClassroomInfo(selfClassroomInfo)\n    }\n}\n\nconst joinClassroom = (classroomWs, classroomId, receiverId, classroomToken) => {\n    classroomWs.send(JSON.stringify({\n        \"cmd\": \"join room\",\n        \"senderId\": getUserId(),\n        \"applicationType\": \"web\",\n        \"classroomId\": classroomId,\n        \"recieverId\": receiverId,\n        \"message\": classroomToken,\n    }))\n}\n\nconst accessClassroom = async (classroomWs, classroomInfo, setWaitingInfo) => {\n    setWaitingInfo({\n        teacherNickname: classroomInfo.teacherNickname,\n        classroomId: classroomInfo.classroomId\n    })\n    classroomWs.send(JSON.stringify({\n        \"cmd\": \"ask\",\n        \"senderId\": getUserId(),\n        \"applicationType\": \"web\",\n        \"classroomId\": classroomInfo.classroomId\n    }))\n}\n\nconst accepetAccess = async (classroomWs, receiverId, receiverApplicationType) => {\n    classroomWs.send(\n        JSON.stringify({\n            cmd: \"accept\",\n            senderId: getUserId(),\n            applicationType: \"web\",\n            recieverId: receiverId,\n            receiverApplicationType: receiverApplicationType,\n            classroomId: await getClassroomId(),\n            message: \"\"\n        })\n    )\n}\n\nconst rejectAccess = async (classroomWs, receiverId, receiverApplicationType) => {\n    classroomWs.send(\n        JSON.stringify({\n            cmd: \"reject\",\n            senderId: getUserId(),\n            applicationType: \"web\",\n            recieverId: receiverId,\n            receiverApplicationType: receiverApplicationType,\n            classroomId: await getClassroomId(),\n            message: \"\"\n        })\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}