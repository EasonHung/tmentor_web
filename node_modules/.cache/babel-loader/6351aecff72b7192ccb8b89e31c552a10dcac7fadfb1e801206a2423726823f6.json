{"ast":null,"code":"import { getClassroomId } from \"../../../api_handler/classroom_api_handler\";\nimport { getUserId } from \"../../../cookie_handler/user_cookie_handler\";\nconst iceServers = {\n  'iceServers': [\n  // {'url': 'stun:stun.l.google.com:19302'},\n  {\n    \"url\": \"turn:relay1.expressturn.com:3478\",\n    \"username\": \"efC2OT8W129D2ID63H\",\n    \"credential\": \"6ZeChztFE4cxEmgg\"\n  }]\n};\nconst videoConstraints = {\n  audio: false,\n  video: true\n};\nlet pc = null;\nexport async function onRTCOffer(setRemoteStream, localStream, message, classroomWs) {\n  pc = new RTCPeerConnection(iceServers);\n  pc.ontrack = event => {\n    setRemoteStream(event.streams[0]);\n  };\n  pc.onicecandidate = async _ref => {\n    let {\n      candidate\n    } = _ref;\n    if (candidate != null) {\n      classroomWs.send(JSON.stringify({\n        \"cmd\": \"candidate\",\n        \"senderId\": getUserId(),\n        \"applicationType\": \"app\",\n        \"recieverId\": message.senderId,\n        \"classroomId\": await getClassroomId(),\n        \"message\": {\n          'sdpMLineIndex': candidate.sdpMLineIndex,\n          'sdpMid': candidate.sdpMid,\n          'candidate': candidate.candidate\n        }\n      }));\n    }\n  };\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(videoConstraints);\n    localStream.getTracks().forEach(track => pc.addTrack(track, stream));\n  } catch (err) {\n    console.error(err);\n  }\n  await pc.setRemoteDescription(new RTCSessionDescription(message.message));\n  await pc.setLocalDescription(await pc.createAnswer());\n  classroomWs.send(JSON.stringify({\n    \"cmd\": \"answer\",\n    \"senderId\": getUserId(),\n    \"applicationType\": \"app\",\n    \"recieverId\": message.senderId,\n    \"classroomId\": await getClassroomId(),\n    \"message\": {\n      'sdp': pc.localDescription.sdp,\n      'type': pc.localDescription.type\n    }\n  }));\n}\nexport async function onICECandidate(message) {\n  if (pc !== null) {\n    pc.addIceCandidate(new RTCIceCandidate(message.message));\n  }\n}\nexport async function startLocalStream(setLocalStream) {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: false,\n    video: true\n  });\n  setLocalStream(stream);\n}\nexport function stopLocalStream(setLocalStream) {\n  setLocalStream({});\n}","map":{"version":3,"names":["getClassroomId","getUserId","iceServers","videoConstraints","audio","video","pc","onRTCOffer","setRemoteStream","localStream","message","classroomWs","RTCPeerConnection","ontrack","event","streams","onicecandidate","_ref","candidate","send","JSON","stringify","senderId","sdpMLineIndex","sdpMid","stream","navigator","mediaDevices","getUserMedia","getTracks","forEach","track","addTrack","err","console","error","setRemoteDescription","RTCSessionDescription","setLocalDescription","createAnswer","localDescription","sdp","type","onICECandidate","addIceCandidate","RTCIceCandidate","startLocalStream","setLocalStream","stopLocalStream"],"sources":["/Users/hongyixun/Desktop/tmentor/tmentor_web/src/pages/classroom/service/webRTC_service.js"],"sourcesContent":["import { getClassroomId } from \"../../../api_handler/classroom_api_handler\";\nimport { getUserId } from \"../../../cookie_handler/user_cookie_handler\";\n\nconst iceServers = {\n    'iceServers': [\n        // {'url': 'stun:stun.l.google.com:19302'},\n        {\n        \"url\": \"turn:relay1.expressturn.com:3478\",\n        \"username\": \"efC2OT8W129D2ID63H\",\n        \"credential\": \"6ZeChztFE4cxEmgg\",\n        },\n    ]\n};\nconst videoConstraints = {\n    audio: false, \n    video: true\n}\n\nlet pc = null\n\n\nexport async function onRTCOffer(setRemoteStream, localStream, message, classroomWs) {\n    pc = new RTCPeerConnection(iceServers);\n\n    pc.ontrack = (event) => {\n        setRemoteStream(event.streams[0])\n    };\n\n    pc.onicecandidate = async ({candidate}) => {\n        if(candidate != null) {\n            classroomWs.send(\n                JSON.stringify({\n                    \"cmd\": \"candidate\",\n                    \"senderId\": getUserId(),\n                    \"applicationType\": \"app\",\n                    \"recieverId\": message.senderId,\n                    \"classroomId\": await getClassroomId(),\n                    \"message\": {\n                      'sdpMLineIndex': candidate.sdpMLineIndex,\n                      'sdpMid': candidate.sdpMid,\n                      'candidate': candidate.candidate,\n                    }\n                })\n            )\n        }\n    }\n\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia(videoConstraints);\n        localStream.getTracks().forEach( (track) =>\n          pc.addTrack(track, stream)\n        )\n    } catch (err) {\n        console.error(err);\n    }\n\n    await pc.setRemoteDescription(new RTCSessionDescription(message.message));\n\n    await pc.setLocalDescription(await pc.createAnswer());\n\n    classroomWs.send(\n        JSON.stringify({\n            \"cmd\": \"answer\",\n            \"senderId\": getUserId(),\n            \"applicationType\": \"app\",\n            \"recieverId\": message.senderId,\n            \"classroomId\": await getClassroomId(),\n            \"message\": {\n              'sdp': pc.localDescription.sdp,\n              'type': pc.localDescription.type,\n            }\n        })\n    )\n}\n\nexport async function onICECandidate(message) {\n    if(pc !== null) {\n        pc.addIceCandidate(new RTCIceCandidate(message.message));\n    }\n}\n\nexport async function startLocalStream(setLocalStream) {\n    const stream = await navigator.mediaDevices.getUserMedia({audio: false, video: true})\n    setLocalStream(stream)\n}\n\nexport function stopLocalStream(setLocalStream) {\n    setLocalStream({})\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}